<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="codeValidate.CodeImg" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIIAAAA1CAYAAACNzDMwAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAASjSURBVHhe7Zo9ctswEIV1kvSpM6mSUr5Fqox7eXSOtPK4
        zC3sGeccHhU+RsZFGgaAtMByuQAXxA8hCcU3ckQCJLEPb3epbP7++xg6nS6EjqELoWPoQugYuhA6hosQ
        wtvTdtg+HdljnTw0LoSXYbfZDBvDdji8c+d0ctCuEF4fzgJA3D0Ob9y5Fiec3St3vOOjQSEch8MdEQBm
        /8KMcdCxXRAy2hLC++OwRUH0EQ4uTifSMZ1mhPC8nwbPz8PwzMxhgJSi0oj+99ghAuNunPWFIHSBCZ4U
        AYKiXYb5fiat3DKrCkG3hZMAi2G6CCuqFjoMnaIup9NZSQh8Hpfie6dghXVOCzLO95LbLUJON9v91Ke+
        ELi2UEw4x0M9EPXyiQYslyAWPKe97/djdaFUFMJMWzjHXIBsQJcVhL/pvRWpJ4RrsIJj1BHC0oLQIMuz
        Ni14Aui6En4+X9eS/dW2dQp0H6VcKYLiQohrCwkROwN2Gve+YFKUcgvts/LMQXH30lYrW04ISS6giAlA
        IC1wnQm/y5Vtfx2fFz5/GXZjNFYwFhECt/jFUAv6x5cW0C7XThFyDd09/Dyf+2mvAj9xiLHIzDNGuwWq
        ETI7TSqZhZDWFubhHDDkSKcdDfcmqBHsbp0Wd2auydzT+Xjc+uR0mRzkE8KCdqkY9w8uLcHOC6QPd2w7
        7O5P40augQI/Itbe0Tyt/faR1RGqpgQJ2H5BqCp4+J41sOvNLoXzGOueFL6x9m43S3tvHDOnhsR3BVn5
        PFpsK1ISPPu9FQg8A1fVc6lPHlS3Ubi51yV/seiz0TVA1g27eZSbPVYNAaN5HFf8hwXu0GrHoMkvBEUo
        RfhzY5lCE4IJToWvb92LBhEEggOGaiA3B7rnWSHEnFufIkJgU4RkFxQpOLV1QxCQjdtr8TYNu/cU9HAQ
        354e560euU9rHYOmkBA0bvFkD44WO4Ddjb++sMdZvv8Yvpm/IejuWl6HQkWjKxITcjvrKO1QUAiKV7WI
        3PcMoXRiQa5CHYe1a4oar8/BuRquP2XqaikBdM/XXsegKSsEMTI38BV6c44DQRi/MZwPyEiciXk9i6sU
        pAkhiNwgYQFxvoddLs3Tp7GpwUPuIqmVVqABISxwg0hOQdgOu/1ZcMGUUAL0jA12DBojBH2D9EAtZG6Q
        klenQqterMH/OFJpKUXQJbFCoNATiyB9+ZSyi1C1njzXFaPWBi2SB25gDlwBFSZtB2NHaLNQawFbI9DF
        D4EnWIzUDRotrq4Nb7HIBoWBGyuhjht0pIi6Bi5AHNxYHlmn0K28HiIhcPCB4+HGT4o4hlYr7GtksRAo
        XCApcB6MCaeH7gY1ySYEQAcRPucIpoje5lUluxA42EAHafOHmWumihAwOtDwOQcd2ylHdSFQTgE/TkTg
        g5ujk87qQrCgF0zwAokTAf2Ofm/n60TRjhAU+gcoX8uIAx8DjKXz3SJ0bUZwAy4F/QDwGQs3zzVBn3cW
        bpJLhX3AjMA16HVLgq9bAnsd+OOagQemi9Aivvtcev/4+UPchBBioYvZOtwzxNKFEAEXABwIelwCHkfn
        o8dK0oXQMXQhdBQfw39CbAme6WaEOgAAAABJRU5ErkJggg==
</value>
  </data>
</root>